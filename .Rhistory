df <- fread("/Users/png/Documents/6. Yonsei/2. UKB/ukb_data - demographic.csv")
df <- data.table::fread("/Users/png/Documents/6. Yonsei/2. UKB/ukb_data - demographic.csv")
df
devtools::document()
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
devtools::document()
library(png.ukb)
out <- descriptive_vars
#' @export png.demo2fid
png.demo2fid <- function(descriptive_vars){
if( any(c("f.eid","feid","eid") %in% descriptive_vars) ){
out <- descriptive_vars
out <- out[!out %in% c("f.eid","feid","eid")]
out <- map_chr(out, ~gsub(".*_f(\\d+)_(\\d)_(\\d).*", "f.\\1.\\2.\\3", .x))
out <- c("f.eid", out)
} else {
out <- map_chr(descriptive_vars, ~gsub(".*_f(\\d+)_(\\d)_(\\d).*", "f.\\1.\\2.\\3", .x))
}
out
}
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
ClinicalOutcomes <-
c("primary_death_icd10",
"secondary_death_icd10",
"self_report_medication",
"self_report_non_cancer",
"self_report_non_cancer_icd10",
"self_report_cancer",
"self_report_operation",
"cancer_register_icd9",
"cancer_register_icd10",
"summary_hes_icd9",
"summary_hes_icd10",
"summary_hes_opcs3",
"summary_hes_opcs4"
)
# To use in loop below - determine how event_type should be processed
var.death <- c(
"primary_death_icd10",
"secondary_death_icd10"
)
var.cancer <- c(
"cancer_register_icd9",
"cancer_register_icd10"
)
#' @export png.demographic_vars
png.var.outcomes <- function(type="descriptive"){
ClinicalOutcomes <-
c("primary_death_icd10",
"secondary_death_icd10",
"self_report_medication",
"self_report_non_cancer",
"self_report_non_cancer_icd10",
"self_report_cancer",
"self_report_operation",
"cancer_register_icd9",
"cancer_register_icd10",
"summary_hes_icd9",
"summary_hes_icd10",
"summary_hes_opcs3",
"summary_hes_opcs4"
)
var.death <- c(
"primary_death_icd10",
"secondary_death_icd10"
)
var.cancer <- c(
"cancer_register_icd9",
"cancer_register_icd10"
)
var.summary <- c(
"summary_hes_icd9",
"summary_hes_icd10",
"summary_hes_opcs3",
"summary_hes_opcs4"
)
var.self <- c(
"self_report_medication",
"self_report_non_cancer",
"self_report_cancer",
"self_report_operation",
"self_report_non_cancer_icd10"
)
c("var.death", "var.cancer", "var.summary", "var.self")
}
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
png.var.outcomes <- function(ukb_data_dict){
ClinicalOutcomes <-
c(ukb_data_dict$descriptive_colnames %>% {.[grep("primary", .)]},
ukb_data_dict$descriptive_colnames %>% {.[grep("disorder", .)]},
ukb_data_dict$descriptive_colnames %>% {.[grep("self_report", .)]},
ukb_data_dict$descriptive_colnames %>% {.[grep("cancer", .)]},
ukb_data_dict$descriptive_colnames %>% {.[grep("death", .)]},
ukb_data_dict$descriptive_colnames %>% {.[grep("diagno", .)]},
ukb_data_dict$descriptive_colnames %>% {.[grep("icd", .)]}) %>%
unique()
var.death <- c(
"primary_death_icd10",
"secondary_death_icd10"
)
var.cancer <- c(
"cancer_register_icd9",
"cancer_register_icd10"
)
var.summary <- c(
"summary_hes_icd9",
"summary_hes_icd10",
"summary_hes_opcs3",
"summary_hes_opcs4"
)
var.self <- c(
"self_report_medication",
"self_report_non_cancer",
"self_report_cancer",
"self_report_operation",
"self_report_non_cancer_icd10"
)
# c(var.death, var.cancer, var.summary, var.self)
ClinicalOutcomes
}
devtools::document()
library(png.ukb)
ukb_data_dict$descriptive_colnames %>% {.[grep("diagno", .)]}
# devtools::install_github("statpng/png.ukb")
# detach("package:png.ukb", unload=TRUE)
library(png.ukb)
library(tidyverse)
library(devtools)
library(dplyr)
library(tidyr)
library(tidyselect)
library(readr)
library(tibble)
library(broom)
source("https://raw.githubusercontent.com/statpng/pngfunction/master/tidyverse/functions.R")
path <- "/Volumes/T7/Yonsei/3. UKB/Clinical/Maindata3/"
filename <- "ukb669778"
ukb_field <- get_ukb_field(filename, path)
ukb_dict <- get_ukb_dict()
ukb_coding <- get_ukb_codings()
ukb_data_dict <- make_data_dict( ukb_main=path%_%filename%_%".tab",
ukb_dict=ukb_dict)
# split Path to path1:path5
ukb_dict_path <- png.dict2path(ukb_dict)
ukb_data_dict_path <- png.dict2path(ukb_data_dict)
# New path categories with at most 2000 variables
ukb_path <- ukb_data_dict_path %>% select(path1:path5) %>% png.path.NestOverN(N=2000)
max(table(ukb_path)) < 2000
length(table(ukb_data_dict$Path))
# [1] 176
length(table(ukb_path))
# Note: variables with missing FieldID
ukb_data_dict_NA <- ukb_data_dict %>% filter(is.na(Path))
ukb_data_dict_NA %>% print(n="max") %>% as.matrix %>% .[,1:5]
ukb_var_desc <- png.demographic_vars(type="descriptive")
ukb_var_fid <- png.desc2fid(ukb_var_desc, simple=TRUE)
cbind(ukb_var_desc, ukb_var_fid) %>% head
cbind(ukb_var_desc, ukb_var_fid) %>% tail
devtools::document()
devtools::document()
library(png.ukb)
cbind(ukb_var_desc, ukb_var_fid) %>% tail
# ukb_path:  This takes a long time
if(FALSE){
tab <- table(ukb_path) %>% sort(decreasing=TRUE)
title <- names(tab)
library(data.table)
for( i in 1:length(tab) ){
wh <- c(1, which( ukb_path == names(tab)[i] ))
ukb_data_dict_filtered <-
ukb_data_dict %>%
slice(wh)
ukb_data_filtered <-
read_ukb( path = path%_%filename%_%".tab",
descriptive_colnames = TRUE,
label = FALSE,
ukb_data_dict = ukb_data_dict_filtered )
fwrite(ukb_data_filtered, paste0("ukb_data - ", title[i], ".csv") )
gc()
rm(ukb_data_filtered)
}
}
png.var.disease(ukb_data_dict)
png.var.disease(ukb_data_dict) %>% head
ukb_data_dict$descriptive_colnames %>% {.[grep("Asthma", .)]}
ukb_data_dict$descriptive_colnames %>% {.[grep("asthma", .)]}
ukb_data_dict$descriptive_colnames %>% {.[grep("primary", .)]}
ukb_data_dict$descriptive_colnames %>% {.[grep("atrial", .)]}
ukb_dict %>% head
ukb_dict %>% .[1:5,1:10]
ukb_dict %>% filter(FieldID %in% 4270)
ukb_dict %>% filter(FieldID %in% 1471)
var_tmp <- c("date_of_attending_assessment_centre_f53_0_0",
"age_at_recruitment_f21022_0_0",
"uk_biobank_assessment_centre_f54_0_0",
"ethnic_background_f21000_0_0",
"genetic_ethnic_grouping_f22006_0_0",
"date_of_death_f40000_0_0",
"underlying_primary_cause_of_death_icd10_f40001_0_0",
"standing_height_f50_0_0",
"height_f12144_2_0",
"age_at_death_f40007_0_0",
"age_at_death_f40007_1_0",
"weight_f21002_0_0",
"weight_f23098_0_0",
"body_mass_index_bmi_f21001_0_0",
"body_mass_index_bmi_f23104_0_0",
"sex_f31_0_0",
"genetic_sex_f22001_0_0",
"date_i10_first_reported_essential_primary_hypertension_f131286_0_0",
"date_i42_first_reported_cardiomyopathy_f131338_0_0",
"date_i48_first_reported_atrial_fibrillation_and_flutter_f131350_0_0",
"source_of_report_of_i48_atrial_fibrillation_and_flutter_f131351_0_0")
df <- png.ukb_read(path="/Volumes/T7/2.UKB/UKB ClinicalData - descriptive", vars=var_tmp, exact=FALSE)
ukb_data_dict
var_tmp <- c("date_of_attending_assessment_centre_f53_0_0",
"age_at_recruitment_f21022_0_0",
"uk_biobank_assessment_centre_f54_0_0",
"ethnic_background_f21000_0_0",
"genetic_ethnic_grouping_f22006_0_0",
"date_of_death_f40000_0_0",
"underlying_primary_cause_of_death_icd10_f40001_0_0",
"standing_height_f50_0_0",
"height_f12144_2_0",
"age_at_death_f40007_0_0",
"age_at_death_f40007_1_0",
"weight_f21002_0_0",
"weight_f23098_0_0",
"body_mass_index_bmi_f21001_0_0",
"body_mass_index_bmi_f23104_0_0",
"sex_f31_0_0",
"genetic_sex_f22001_0_0",
"date_i10_first_reported_essential_primary_hypertension_f131286_0_0",
"date_i42_first_reported_cardiomyopathy_f131338_0_0",
"date_i48_first_reported_atrial_fibrillation_and_flutter_f131350_0_0",
"source_of_report_of_i48_atrial_fibrillation_and_flutter_f131351_0_0")
df <- png.ukb_read(path="/Volumes/T7/2.UKB/UKB ClinicalData - descriptive", vars=var_tmp, exact=FALSE)
df <- png.ukb_read(path="/Volumes/T7/2.UKB/UKB ClinicalData - descriptive", vars=var_tmp, ukb_data_dict=ukb_data_dict, exact=FALSE)
df %>% head
df %>% dim
df %>% head
df %>% colnames
ukb_data <- df
ukb_data_visit0 <- png.filter_visit(ukb_data, visit=0)
ukb_data_visit0 %>% colnames()
#' @export png.filter_visit
png.filter_visit <- function(df, visit=0, type="descriptive"){
# visit=1; type="descriptive"
df[,c(1, grep( paste0("f\\d+_",visit,"_\\d", collapse="|"), colnames(df)))]
}
ukb_data_visit0 <- png.filter_visit(ukb_data, visit=0:1)
ukb_data_visit0 %>% colnames
ukb_data_visit0_coding <- png.df_coding(ukb_data_visit0, ukb_data_dict, ukb_coding)
ukb_data_visit0_coding %>% dim
ukb_data_visit0_coding
ukb_data_visit0_coding[,25:31] %>% as.matrix
ukb_data_visit0 <- png.filter_visit(ukb_data, visit=0)
ukb_data_visit0_coding <- png.df_coding(ukb_data_visit0, ukb_data_dict, ukb_coding)
ukb_data_visit0_coding %>% elucidate::describe_na_all()
ukb_data_visit0_coding %>% elucidate::describe_na_all()
ukb_data_visit0_coding %>% elucidate::describe_all()
# ukb_data_visit0_coding %>% elucidate::describe_all()
ukb_data_visit0_coding %>% elucidate::describe_all(class = c("d","f","c","l","n")[1] )
ukb_data_visit0_coding %>% elucidate::describe_all(class = c("d","f","c","l","n")[1:2] )
ukb_data_visit0_coding %>% elucidate::describe_all(class = c("d","f","c","l","n")[c(1,3)] )
ukb_data_visit0_coding %>% elucidate::describe_all(class = c("d","f","c","l","n") )
ukb_data_visit0_coding %>% elucidate::describe_all(class = "all" )
library(elucidate)
df <- ukb_data_visit0_coding
df %>% select(standing_height_f50_0_0, height_f12144_2_0) %>%
apply(2, function(x) mean(is.na(x)))
df %>% head
df %>% select(standing_height_f50_0_0, height_f12144_2_0) %>%
apply(2, function(x) mean(is.na(x)))
df <- ukb_data_visit0 <- png.filter_visit(ukb_data, visit=0:4)
df <- png.filter_visit(ukb_data, visit=0:4)
df %>% select(standing_height_f50_0_0, height_f12144_2_0) %>%
apply(2, function(x) mean(is.na(x)))
df %>% select(standing_height_f50_0_0, height_f12144_2_0) %>% elucidate::describe_all()
df %>% select(age_at_death_f40007_0_0, age_at_death_f40007_1_0) %>% elucidate::describe_all()
df %>% select(weight_f21002_0_0, weight_f23098_0_0, weight_manual_entry_f3160_0_0, weight_manual_entry_f3160_1_0) %>% elucidate::describe_all()
df %>% select(weight_f21002_0_0, weight_f23098_0_0) %>% elucidate::describe_all()
df %>% select(standing_height_f50_0_0, height_f12144_2_0) %>%
{cor(., use = "complete.obs") %>% {.[row(.)>col(.)]} %>% print;
table(.[,1] %>% is.na, .[,2] %>% is.na) }
df %>% select(standing_height_f50_0_0, height_f12144_2_0) %>% cor(., use = "complete.obs")
df %>% select(weight_f21002_0_0, weight_f23098_0_0) %>% cor(., use = "complete.obs")
df %>% select(age_at_death_f40007_0_0, age_at_death_f40007_1_0) %>% cor(., use = "complete.obs")
df %>% select(body_mass_index_bmi_f21001_0_0, body_mass_index_bmi_f23104_0_0) %>% cor(., use = "complete.obs")
df %>% select(age_at_recruitment_f21022_0_0, age_when_attended_assessment_centre_f21003_0_0) %>% {cor(., use = "complete.obs") %>% .[1,2] %>% print; table(.[,1] %>% is.na, .[,2] %>% is.na) }
df$genetic_ethnic_grouping_f22006_0_0 %>% head
df$genetic_ethnic_grouping_f22006_0_0 %>% table
df$ethnic_background_f21000_0_0 %>% table
devtools::document()
ukb_coding
df <- png.filter_visit(ukb_data, visit=0:4) %>% png.df2coding(ukb_data_dict, ukb_coding)
devtools::document()
library(png.ukb)
library(png.ukb)
df %>% select(sex_f31_0_0, genetic_sex_f22001_0_0) %>% {mean(.[,1]==.[,2])}
df %>% select(sex_f31_0_0, genetic_sex_f22001_0_0) %>% table
df %>% select(weight_f21002_0_0, weight_f23098_0_0) %>%
corrmorant(style = "blue_red")
df %>% select(weight_f21002_0_0, weight_f23098_0_0) %>%
corrmorant::corrmorant(style = "blue_red")
df$year_of_birth_f34_0_0 %>% na.omit() %>% dim
plot_var(data=df$year_of_birth_f34_0_0 %>% na.omit())
var_genetics <- c("genotype_measurement_batch_f22000_0_0",
"heterozygosity_f22003_0_0",
"heterozygosity_pca_corrected_f22004_0_0",
"missingness_f22005_0_0",
'affymetrix_quality_control_metric_cluster_cr_f22025_0_0',
'affymetrix_quality_control_metric_dqc_f22026_0_0',
"genotype_measurement_plate_f22007_0_0",
"genotype_measurement_well_f22008_0_0",
"outliers_for_heterozygosity_or_missing_rate_f22027_0_0",
"genetic_principal_components_f22009_0_1")
ukb_data <- png.ukb_read(path="/Volumes/T7/2.UKB/UKB ClinicalData - descriptive", vars=var_genetics, ukb_data_dict=ukb_data_dict, exact=FALSE)
var_genetics <- c("genotype_measurement_batch_f22000_0_0",
"heterozygosity_f22003_0_0",
"heterozygosity_pca_corrected_f22004_0_0",
"missingness_f22005_0_0",
'affymetrix_quality_control_metric_cluster_cr_f22025_0_0',
'affymetrix_quality_control_metric_dqc_f22026_0_0',
"genotype_measurement_plate_f22007_0_0",
"genotype_measurement_well_f22008_0_0",
"outliers_for_heterozygosity_or_missing_rate_f22027_0_0",
"genetic_principal_components_f22009_0_1")
var_genetics
ukb_data_dict$descriptive_colnames[grep('"',ukb_data_dict$descriptive_colnames)]
ukb_data_dict$descriptive_colnames[grep('\"',ukb_data_dict$descriptive_colnames)]
gsub('\"',"",ukb_dict$descriptive_colnames)[grep('\"',ukb_data_dict$descriptive_colnames)]
gsub('\"',"",ukb_dict$descriptive_colnames)
gsub('\"',"",ukb_dict$descriptive_colnames)
ukb_dict$descriptive_colnames
ukb_dict %>% head
ukb_dict$Field
gsub('\"',"",ukb_dict$Field)[grep('\"',ukb_data_dict$descriptive_colnames)]
gsub('\"',"",ukb_dict$Field)[grep('\"',ukb_dict$Field)]
grep('\"',ukb_dict$Field)
ukb_dict$Field
grep('\"',ukb_data_dict$descriptive_colnames)
ukb_data_dict$descriptive_colnames[grep('\"',ukb_data_dict$descriptive_colnames)]
grep('affymetrix',ukb_dict$Field)
ukb_dict$Field
grep('affymetrix',ukb_dict$Field)
grep('affy',ukb_dict$Field)
ukb_data_dict$descriptive_colnames[grep('\"',ukb_data_dict$descriptive_colnames)]
grep("cluster",ukb_dict$Field)
library(png.ukb)
ukb_data_dict <- make_data_dict( ukb_main=path%_%filename%_%".tab",
ukb_dict=ukb_dict)
grep('/"', ukb_data_dict$descriptive_colnames)
ukb_data <- png.ukb_read(path="/Volumes/T7/2.UKB/UKB ClinicalData - descriptive", vars=var_genetics, ukb_data_dict=ukb_data_dict, exact=FALSE)
ukb_data_visit0 <- png.filter_visit(ukb_data, visit=0)
ukb_data_visit0_coding <- png.df2coding(ukb_data_visit0, ukb_data_dict, ukb_coding)
ukb_data_visit0_coding
ukb_data_visit0_coding %>% head %>% as.matrix
rm(list=ls())
devtools::document()
devtools::document()
library(png.ukb)
library(png.ukb)
library(png.ukb)
library(png.ukb)
Reduce(
function(x,y){
newcols = setdiff(names(y),names(x))
x[,(newcols)] <- y[, ..newcols]
x
},
df_list,
init = copy(df_list[[1]][,c("x","y")])
)
library(png.ukb)
library(png.ukb)
library(png.ukb)
df <- data.table::fread("/Volumes/T7/2.UKB/UKB_ClinicalData_descriptive/ukb_data - Assessment centre > Imaging > Brain MRI.csv")
colnames(df)
length(df)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
exact=TRUE
vars <- "genotype_measurement_plate_f22007_0_0"
f.sep <- switch(type, "descriptive"="", "fid"=".")
RegExp <- paste0("f",f.sep,"(\\d+)")
type="descriptive"
f.sep <- switch(type, "descriptive"="", "fid"=".")
RegExp <- paste0("f",f.sep,"(\\d+)")
if(!exact){
vars <- ifelse( vars %in% c("eid","f.eid","feid"), "eid", stringr::str_extract(vars, RegExp, group=1) )
}
vars
wh.vars <- which(stringr::str_extract(ukb_data_dict$colheaders_raw, "f.(\\d+)", group=1) %in% vars)
devtools::document()
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
type="bgenie"
na.strings <- switch(type, "plink"="NA", "bgenie"="-999")
na.strings
devtools::document()
library(png.ukb)
colnames(ukb_data) %>% {.[grep(id,.)]}
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
png.withdrawals <- function(){
id.0425 <- c(1012595, 1045711, 1178130, 1486100, 1527419, 1566279, 1736161, 2029918, 2330804, 2332166, 2359968, 2608772, 2706464, 2921349, 3010338, 3230053, 3304352, 3434544, 3449065, 3856220, 4036243, 4071416, 4080610, 4286087, 4337463, 4471834, 4502593, 4585337, 4771799, 4946365, 4962291, 5336552, 5352267, 5427057, 5461024, 5540686, 5606679, 5666673, 5677381, 5791191, 5795508, 5795570, 6024120)
out <- unique( c(id.0425) )
out
}
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
devtools::document()
library(png.ukb)
